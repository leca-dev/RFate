% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/UTILS.train_RF_habitat.R
\name{train_RF_habitat}
\alias{train_RF_habitat}
\title{Create a random forest algorithm trained on observed vegetation data}
\usage{
train_RF_habitat(
  releves.PFG,
  hab.obs,
  external.training.mask = NULL,
  studied.habitat = NULL,
  RF.param,
  output.path,
  perStrata,
  sim.version
)
}
\arguments{
\item{releves.PFG}{a data frame with PFG abundances (column named abund) at each site, 
for each PFG and strata & coordinates of each site.}

\item{hab.obs}{a raster map of the observed habitat in the extended studied area.}

\item{external.training.mask}{default \code{NULL}. (optional) a raster map for keeping 
releves data only in a specific area.}

\item{studied.habitat}{default \code{NULL}. a 2 columns data frame which contains 
the habitats (2nd column) and the ID (1st column) for each of them which 
will be taken into account for the validation.}

\item{RF.param}{a list of 2 parameters for random forest model : \cr
share.training defines the size of the training part of the data base. \cr
ntree is the number of trees build by the algorithm, it allows to reduce the prediction error.}

\item{output.path}{access path to the folder where output files will be created.}

\item{perStrata}{\code{Logical}. If \code{TRUE}, the PFG abundance is defined
by strata in each site. If \code{FALSE}, PFG abundance is defined for all strata.}

\item{sim.version}{a character vector with the name(s) of the simulation(s) to validate.}
}
\value{
2 prepared observed releves files are created before the building of the random
forest model in a folder previously defined. \cr
5 more files are created at the end of the script to save the RF model and
the performance analyzes (confusion matrix and TSS) for the training and 
testing parts.
}
\description{
This script is designed to produce a random forest model
trained on observed PFG abundance and a map of observed habitat.
}
\details{
This function transforms PFG abundance in relative abundance,
gets habitat information from an habitat data frame previously defined and a habitat map, 
keep releves on interesting habitat(s) and then builds a random forest model. Finally, 
the function analyzes the model performance with computation of confusion matrix and TSS between
the training and testing sample.
}
\author{
Matthieu Combaud, Maxime Delprat
}
