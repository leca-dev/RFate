% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/UTILS.train_RF_habitat.R
\name{train_RF_habitat}
\alias{train_RF_habitat}
\title{Create a random forest algorithm trained on observed vegetation data}
\usage{
train_RF_habitat(
  releves.PFG,
  hab.obs,
  external.training.mask = NULL,
  studied.habitat = NULL,
  RF.param,
  output.path,
  perStrata,
  seed
)
}
\arguments{
\item{releves.PFG}{A \code{data.frame} with at least 5 columns : \cr
\code{site}, \code{x}, \code{y}, which contain respectively ID, x coordinate & y coordinate of each site of the study area. \cr
\code{abund} & \code{PFG} which contain respectively abundance (can be absolute abundance, Braun-Blanquet abundance or presence-absence) 
& name of PFG.
\cr (\emph{and optionally, \code{strata}}) which contains the number of strata at each the abundance is noted. 
(habitat & PFG composition validation).}

\item{hab.obs}{A raster map of the observed habitat in the extended studied area.}

\item{external.training.mask}{default \code{NULL}. 
\cr (optional) A raster map for keeping releves data only in a specific area.}

\item{studied.habitat}{A \code{data.frame} with 2 columns : 
\cr \code{ID} which contains the habitat ID, & \code{habitat} which contains the habitat names which will be taken into account 
for the validation (habitat & PFG composition validation).}

\item{RF.param}{A \code{list} of 2 parameters to fit a random forest model : \cr
\code{share.training} defines the size of the training part of the data base. \cr
\code{ntree} is the number of trees build by the algorithm, it allows to reduce the prediction error.}

\item{output.path}{Access path to the folder where output files will be created.}

\item{perStrata}{\code{Logical}. 
\cr If \code{TRUE}, the PFG abundance is defined
by strata in each site. If \code{FALSE}, PFG abundance is defined for all strata.}
}
\value{
2 prepared observed releves files are created before the building of the random
forest model in a folder previously defined. \cr
5 more files are created at the end of the script to save the RF model and
the performance analyzes (confusion matrix and TSS) for the training and 
testing parts.
}
\description{
This script is designed to produce a random forest model
trained on observed PFG abundance and a map of observed habitat.
}
\details{
This function transforms PFG abundance in relative abundance,
gets habitat information from an habitat data frame previously defined and a habitat map, 
keep releves on interesting habitat(s) and then builds a random forest model. Finally, 
the function analyzes the model performance with computation of confusion matrix and TSS between
the training and testing sample.
}
\author{
Matthieu Combaud, Maxime Delprat
}
